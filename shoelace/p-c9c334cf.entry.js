import{r as e,h as t}from"./p-bf36b983.js";const i=class{constructor(t){e(this,t),this.isoTime="",this.relativeTime="",this.titleTime="",this.format="long",this.numeric="auto",this.sync=!1}connectedCallback(){this.updateTime()}disconnectedCallback(){clearTimeout(this.updateTimeout)}updateTime(){const e=new Date,t=new Date(this.date);if(isNaN(t.getMilliseconds()))return this.relativeTime="",void(this.isoTime="");const i=+t-+e,{unit:a,value:s}=[{max:276e4,value:6e4,unit:"minute"},{max:72e6,value:36e5,unit:"hour"},{max:5184e5,value:864e5,unit:"day"},{max:24192e5,value:6048e5,unit:"week"},{max:28512e6,value:2592e6,unit:"month"},{max:1/0,value:31536e6,unit:"year"}].find((e=>Math.abs(i)<e.max));if(this.isoTime=t.toISOString(),this.titleTime=new Intl.DateTimeFormat(this.locale,{month:"long",year:"numeric",day:"numeric",hour:"numeric",minute:"numeric",timeZoneName:"short"}).format(t),this.relativeTime=new Intl.RelativeTimeFormat(this.locale,{numeric:this.numeric,style:this.format}).format(Math.round(i/s),a),clearTimeout(this.updateTimeout),this.sync){let t;t=(t=>{const i={second:1e3,minute:6e4,hour:36e5,day:864e5}[t];return i-e.getTime()%i})("minute"===a?"second":"hour"===a?"minute":"day"===a?"hour":"day"),this.updateTimeout=setTimeout((()=>this.updateTime()),t)}}render(){return t("time",{dateTime:this.isoTime,title:this.titleTime},this.relativeTime)}static get watchers(){return{date:["updateTime"],locale:["updateTime"],format:["updateTime"],numeric:["updateTime"],sync:["updateTime"]}}};export{i as sl_relative_time}